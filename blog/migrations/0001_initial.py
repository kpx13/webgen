# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2015-12-20 13:39
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')),
                ('date', models.DateField(verbose_name='\u0434\u0430\u0442\u0430')),
                ('text', ckeditor.fields.RichTextField(verbose_name='\u0442\u0435\u043a\u0441\u0442')),
                ('desc', models.CharField(max_length=512, verbose_name='\u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442')),
                ('slug', models.SlugField(blank=True, help_text='\u0417\u0430\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043d\u0435 \u043d\u0443\u0436\u043d\u043e', unique=True, verbose_name='slug')),
            ],
            options={
                'ordering': ['-date'],
                'verbose_name': '\u0441\u0442\u0430\u0442\u044c\u044f',
                'verbose_name_plural': '\u0441\u0442\u0430\u0442\u044c\u0438',
            },
        ),
        migrations.CreateModel(
            name='ArticleTag',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('taggit.tag',),
        ),
        migrations.CreateModel(
            name='ArticleTaggedItem',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('taggit.taggeditem',),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='blog.ArticleTaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
